# Google GKE cluster values
environment:
  type: "gcp"
  domain: "islamic-app.example.com"

replicaCount:
  backend: 2
  frontend: 2

# Service configuration for GCP
service:
  frontend:
    type: ClusterIP

# Ingress configuration for GCP
ingress:
  enabled: true
  className: "gce"  # GCE ingress class
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    # GCP specific annotations
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: "islamic-app-ip"  # Reserve static IP in GCP
    ingress.gcp.kubernetes.io/managed-certificates: "islamic-app-ssl-cert"
  hosts:
    - host: islamic-app.example.com
      paths:
        - path: /
          pathType: Prefix
          service: frontend
        - path: /api
          pathType: Prefix
          service: backend
  tls:
    - secretName: islamic-app-tls
      hosts:
        - islamic-app.example.com

# Production resources for GCP
resources:
  backend:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi
  frontend:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi

# Autoscaling for production
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70

# GCP storage configuration
persistence:
  enabled: true
  storageClass: "ssd"  # GCP SSD persistent disk
  size: 20Gi

# Production configuration
app:
  config:
    flaskEnv: production
    nodeEnv: production
    corsOrigins: "https://islamic-app.example.com"
  secrets:
    secretKey: "CHANGE-ME-USE-GCP-SECRET-MANAGER"
    jwtSecretKey: "CHANGE-ME-USE-GCP-SECRET-MANAGER"

postgresql:
  auth:
    postgresPassword: "CHANGE-ME-USE-GCP-SECRET-MANAGER"

# Node selection for production
nodeSelector:
  cloud.google.com/gke-nodepool: application-pool
