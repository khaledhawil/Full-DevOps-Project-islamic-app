apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-script
  namespace: islamic-app
data:
  init.sql: |
    -- Create the database if it doesn't exist
    CREATE DATABASE islamic_app;
    
    -- Connect to the islamic_app database
    \c islamic_app;
    
    -- Create users table
    CREATE TABLE IF NOT EXISTS users (
        id SERIAL PRIMARY KEY,
        username VARCHAR(80) UNIQUE NOT NULL,
        email VARCHAR(120) UNIQUE NOT NULL,
        password_hash VARCHAR(128) NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );
    
    -- Create user_preferences table
    CREATE TABLE IF NOT EXISTS user_preferences (
        id SERIAL PRIMARY KEY,
        user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
        theme VARCHAR(20) DEFAULT 'light',
        language VARCHAR(10) DEFAULT 'en',
        notifications_enabled BOOLEAN DEFAULT true,
        prayer_reminders BOOLEAN DEFAULT true,
        volume_level FLOAT DEFAULT 0.5,
        quran_audio_favorites JSON DEFAULT '[]',
        hadith_favorites JSON DEFAULT '[]',
        azkar_favorites JSON DEFAULT '[]',
        last_reciter VARCHAR(100),
        last_server VARCHAR(100),
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        UNIQUE(user_id)
    );
    
    -- Create user_reading_stats table
    CREATE TABLE IF NOT EXISTS user_reading_stats (
        id SERIAL PRIMARY KEY,
        user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
        surah_number INTEGER NOT NULL,
        ayah_number INTEGER NOT NULL,
        read_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        reading_time INTEGER DEFAULT 0
    );
    
    -- Create tasbeh_count table
    CREATE TABLE IF NOT EXISTS tasbeh_count (
        id SERIAL PRIMARY KEY,
        user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
        count INTEGER DEFAULT 0,
        phrase TEXT,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );
    
    -- Create user_phrases table
    CREATE TABLE IF NOT EXISTS user_phrases (
        id SERIAL PRIMARY KEY,
        user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
        phrase TEXT NOT NULL,
        count INTEGER DEFAULT 0,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );
    
    -- Create user_locations table
    CREATE TABLE IF NOT EXISTS user_locations (
        id SERIAL PRIMARY KEY,
        user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
        latitude DECIMAL(10, 8),
        longitude DECIMAL(11, 8),
        city VARCHAR(100),
        country VARCHAR(100),
        timezone VARCHAR(50),
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        UNIQUE(user_id)
    );
    
    -- Create user_achievements table
    CREATE TABLE IF NOT EXISTS user_achievements (
        id SERIAL PRIMARY KEY,
        user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
        achievement_type VARCHAR(50) NOT NULL,
        achievement_data JSON DEFAULT '{}',
        earned_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );
    
    -- Create indexes for better performance
    CREATE INDEX IF NOT EXISTS idx_users_username ON users(username);
    CREATE INDEX IF NOT EXISTS idx_users_email ON users(email);
    CREATE INDEX IF NOT EXISTS idx_user_reading_stats_user_id ON user_reading_stats(user_id);
    CREATE INDEX IF NOT EXISTS idx_tasbeh_count_user_id ON tasbeh_count(user_id);
    CREATE INDEX IF NOT EXISTS idx_user_phrases_user_id ON user_phrases(user_id);

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: islamic-app
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: islamic-app-secrets
              key: postgres-db
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: islamic-app-secrets
              key: postgres-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: islamic-app-secrets
              key: postgres-password
        - name: POSTGRES_HOST_AUTH_METHOD
          value: "trust"
        ports:
        - containerPort: 5432
          name: postgres
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        - name: postgres-init
          mountPath: /docker-entrypoint-initdb.d
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - pg_isready -U islamic_user -d islamic_app
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - pg_isready -U islamic_user -d islamic_app
          initialDelaySeconds: 5
          periodSeconds: 5
        # resources:
        #   requests:
        #     memory: "128Mi"  # Reduced from 256Mi
        #     cpu: "100m"      # Reduced from 250m
        #   limits:
        #     memory: "256Mi"  # Reduced from 512Mi
        #     cpu: "200m"      # Reduced from 500m
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
      - name: postgres-init
        configMap:
          name: postgres-init-script

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: islamic-app
  labels:
    app: postgres
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: postgres
  selector:
    app: postgres
---
