---
# Jenkins installation and configuration
- name: Create Jenkins directories
  file:
    path: "{{ item }}"
    state: directory
    owner: ec2-user
    group: ec2-user
    mode: '0755'
  with_items:
    - /var/jenkins_home
    - /opt/islamic-app/jenkins
  tags: jenkins_setup

- name: Install Jenkins using Docker
  docker_container:
    name: jenkins
    image: jenkins/jenkins:{{ jenkins_version }}
    state: started
    restart_policy: unless-stopped
    ports:
      - "{{ jenkins_port }}:8080"
      - "50000:50000"
    volumes:
      - /var/jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/local/bin/docker:/usr/bin/docker
      - /usr/local/bin/docker-compose:/usr/bin/docker-compose
      - /usr/local/bin/kubectl:/usr/local/bin/kubectl
      - /root/.aws:/var/jenkins_home/.aws
    env:
      JENKINS_OPTS: "--httpPort=8080"
      JAVA_OPTS: "-Xmx2048m -Xms1024m"
    user: root
    privileged: true
  tags: jenkins_install

- name: Wait for Jenkins to be ready
  uri:
    url: "http://localhost:{{ jenkins_port }}/login"
    method: GET
    status_code: 200
  register: jenkins_ready
  until: jenkins_ready.status == 200
  retries: 30
  delay: 10
  tags: jenkins_wait

- name: Configure AWS CLI for Jenkins
  shell: |
    docker exec jenkins aws configure set region {{ aws_region }}
  tags: jenkins_aws

- name: Update EKS kubeconfig for Jenkins
  shell: |
    docker exec jenkins aws eks update-kubeconfig --region {{ aws_region }} --name {{ eks_cluster_name }}
  tags: jenkins_eks

- name: Create Jenkins initial setup script
  copy:
    content: |
      #!/bin/bash
      # Jenkins initial setup script
      
      # Wait for Jenkins to be fully ready
      sleep 60
      
      # Install required plugins
      plugins=(
          "blueocean"
          "docker-workflow"
          "kubernetes"
          "pipeline-stage-view"
          "git"
          "workflow-aggregator"
          "pipeline-utility-steps"
          "github"
          "github-branch-source"
          "build-timeout"
          "timestamper"
      )
      
      for plugin in "${plugins[@]}"; do
          echo "Installing plugin: $plugin"
          docker exec jenkins jenkins-plugin-cli --plugins $plugin
      done
      
      # Restart Jenkins to activate plugins
      docker restart jenkins
      
      echo "Jenkins setup completed!"
    dest: /home/ec2-user/setup-jenkins.sh
    mode: '0755'
    owner: ec2-user
    group: ec2-user
  tags: jenkins_setup_script

- name: Create script to get Jenkins admin password
  copy:
    content: |
      #!/bin/bash
      echo "=== Jenkins Initial Admin Password ==="
      docker exec jenkins cat /var/jenkins_home/secrets/initialAdminPassword
      echo "======================================"
    dest: /home/ec2-user/get-jenkins-password.sh
    mode: '0755'
    owner: ec2-user
    group: ec2-user
  tags: jenkins_password_script

- name: Display Jenkins access information
  debug:
    msg:
      - "Jenkins has been installed successfully!"
      - "Access URL: http://{{ ansible_host }}:{{ jenkins_port }}"
      - "To get admin password: docker exec jenkins cat /var/jenkins_home/secrets/initialAdminPassword"
      - "Or run: /home/ec2-user/get-jenkins-password.sh"
  tags: jenkins_info
